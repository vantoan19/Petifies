version: '3.9'

services:
  post-service:
    build: 
      context: ../../../
      dockerfile: ./server/services/post-service/Dockerfile
    restart: always
    volumes:
      - ../../../build/server/postService:/app/postService
    ports:
      - "82:8888"
    environment:
      - SERVER_MODE=development
      - DB_PASSWORD=123456
    networks:
      - petifies

  post-mongo-1:
    image: mongo:6.0
    restart: always
    volumes: 
      - ../db-data/post-mongo-1:/data/db
    command: mongod --bind_ip_all --replSet my-mongo-set
    depends_on: 
      - post-mongo-2 
      - post-mongo-3
    networks:
      - petifies

  post-mongo-2:
    image: mongo:6.0
    restart: always
    # volumes: 
    #   - ../db-data/post-mongo-2:/data/db
    command: mongod --bind_ip_all --replSet my-mongo-set
    networks:
      - petifies

  post-mongo-3:
    image: mongo:6.0
    restart: always
    # volumes: 
    #   - ../db-data/post-mongo-3:/data/db
    command: mongod --bind_ip_all --replSet my-mongo-set
    networks:
      - petifies

  mongoinit:
    image: mongo:6.0
    restart: "no"
    depends_on:
      - post-mongo-1
      - post-mongo-2
      - post-mongo-3
    volumes:
      - ./scripts:/scripts
    entrypoint: [ "bash", "/scripts/rs-init.sh"]
    networks:
      - petifies

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://post-mongo-1:27017,post-mongo-2:27017,post-mongo-3:27017/?replicaSet=my-mongo-set
    networks:
      - petifies
